@model Report

<table class="table table-bordered table-sm">
    <tbody>
        <tr class="table-active text-center">
            <td>样本编号</td>
            <td>检测系统A结果(@(Html.DisplayFor(item => Model.Unit)))</td>
            <td>检测系统B结果(@(Html.DisplayFor(item => Model.Unit)))</td>
            <td>偏倚/一致性判断</td>
        </tr>

        @{
            // 用于生成实验号和结果列表
            var SampleName = Model.SampleName.Split(",").ToList();
            var TargetResult = Model.TargetResult.Split(",").ToList();
            var MatchResult = Model.MatchResult.Split(",").ToList();
            var Bias = Model.Bias.Split(",").ToList();
            var YorN = Model.YorN.Split(",").ToList();
            var halfALE = Model.ALE / 2;
        }

        @for (int i = 0; i < SampleName.Count; i++)
        {
            var samplename = SampleName[i];
            var targetResult = TargetResult[i];
            var matchResult = MatchResult[i];
            var bias = Bias[i];
            var YN = YorN[i];

            <tr class="text-center">
                <td>@samplename</td>
                <td>@targetResult</td>
                <td>@matchResult</td>
                <td>
                    @bias /
                    <span class="@(YN == "N"? "text-danger h5" : "")">@YN</span>
                </td>
            </tr>
        }

        @{
            var a = Model.a;
            var b = Model.b;
            var aUCI = Model.aUCI;
            var bUCI = Model.bUCI;
            var aLCI = Model.aLCI;
            var bLCI = Model.bLCI;
            var Xc1 = Model.Xc1;
            var Xc2 = Model.Xc2;

            double MaxSEDivXc(double Xc)
            {
                // 返回最大SE/Xc
                var result = Math.Round(Math.Max(Math.Abs((bLCI * Xc + aLCI) / Xc - 1), Math.Abs((bUCI * Xc + aUCI) / Xc - 1)), 3);
                return result;
            }
        }

        <tr>
            <td colspan="4">
                <p>
                    不同检测系统结果比对分析：<br />
                    回归方程为 y = @a.ToString("F4") + @b.ToString("F4") x，
                    斜率b的95%置信区间为（@bLCI.ToString("F4") ~ @bUCI.ToString("F4")），
                    截距a的95%置信区间为（@aLCI.ToString("F4") ~ @aUCI.ToString("F4")）。

                    代入医学决定水平值Xc1=@(Xc1)算出Y为@((b * Xc1 + a).ToString("F4"))
                    （Y的置信区间为@((bLCI * Xc1 + aLCI).ToString("F4")) ~ @((bUCI * Xc1 + aUCI).ToString("F4"))），
                    最大SE/Xc%为@(MaxSEDivXc(Xc1).ToString("P1"))，
                    @(MaxSEDivXc(Xc1) < halfALE ? "小于" : "大于等于")1/2ALE @(halfALE.ToString("P1"))。

                    @if (Xc2 != Xc1)
                    {
                        <text>代入医学决定水平值Xc2=@(Xc2)算出Y为@((b * Xc2 + a).ToString("F4"))
                            （Y的置信区间为@((bLCI * Xc2 + aLCI).ToString("F4")) ~ @((bUCI * Xc2 + aUCI).ToString("F4"))），
                            最大SE/Xc%为@(MaxSEDivXc(Xc2).ToString("P1"))，
                            @(MaxSEDivXc(Xc2) < halfALE ? "小于" : "大于等于")1/2ALE @(halfALE.ToString("P1"))。</text>
                    }
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2" width="50%">
                @*(描述性统计)*@
                <table class="table table-sm">
                    <tr>
                        <td>Variable X</td>
                        <td>@Html.DisplayFor(model => model.TargetInstrumentName)</td>
                    </tr>
                    <tr>
                        <td>Variable Y</td>
                        <td>@Html.DisplayFor(model => model.MatchInstrumentName)</td>
                    </tr>
                    <tr>
                        <td>Sample size</td>
                        <td class="text-right">@SampleName.Count</td>
                    </tr>
                </table>
                @{
                    var doubleTargetResult = TargetResult.Select(x => double.Parse(x)).ToList();
                    var doubleMatchResult = MatchResult.Select(x => double.Parse(x)).ToList();
                }
                <table class="table table-sm">
                    <tr>
                        <td></td>
                        <td>Variable X</td>
                        <td>Variable Y</td>
                    </tr>
                    <tr>
                        <td>Lowest value</td>
                        <td class="text-right">@doubleTargetResult.Min().ToString("F4")</td>
                        <td class="text-right">@doubleMatchResult.Min().ToString("F4")</td>
                    </tr>
                    <tr>
                        <td>Highest value</td>
                        <td class="text-right">@doubleTargetResult.Max().ToString("F4")</td>
                        <td class="text-right">@doubleMatchResult.Max().ToString("F4")</td>
                    </tr>
                    <tr>
                        <td>Arithmetic mean</td>
                        <td class="text-right">@doubleTargetResult.Average().ToString("F4")</td>
                        <td class="text-right">@doubleMatchResult.Average().ToString("F4")</td>
                    </tr>
                    <tr>
                        <td>Median</td>
                        <td class="text-right">@doubleTargetResult.Median().ToString("F4")</td>
                        <td class="text-right">@doubleMatchResult.Median().ToString("F4")</td>
                    </tr>
                    <tr>
                        <td>Standard deviation</td>
                        <td class="text-right">@doubleTargetResult.StandardDeviation().ToString("F4")</td>
                        <td class="text-right">@doubleMatchResult.StandardDeviation().ToString("F4")</td>
                    </tr>
                    <tr>
                        <td>Standard error of the mean</td>
                        <td class="text-right">@((doubleTargetResult.StandardDeviation() / Math.Sqrt(doubleTargetResult.Count)).ToString("F4"))</td>
                        <td class="text-right">@((doubleMatchResult.StandardDeviation() / Math.Sqrt(doubleMatchResult.Count)).ToString("F4"))</td>
                    </tr>
                </table>

                <table class="table table-sm">
                    <tr>
                        <td colspan="2">Regression Equation</td>
                    </tr>
                    <tr>
                        <td colspan="2">y = @a.ToString("F4") + @b.ToString("F4") x</td>
                    </tr>
                    <tr>
                        <td>Intercept A</td>
                        <td class="text-right">@a.ToString("F4")</td>
                    </tr>
                    <tr>
                        <td>95% CI</td>
                        <td class="text-right">@aLCI.ToString("F4") to @aUCI.ToString("F4")</td>
                    </tr>
                    <tr>
                        <td>Slope B</td>
                        <td class="text-right">@b.ToString("F4")</td>
                    </tr>
                    <tr>
                        <td>95% CI</td>
                        <td class="text-right">@bLCI.ToString("F4") to @bUCI.ToString("F4")</td>
                    </tr>
                    <tr>
                        <td>Cusum test for linearity</td>
                        <td>No significant deviation from linearity(@(Model.P > 0.1 ? "P>0.1" : "P<=0.1"))</td>
                    </tr>
                </table>
            </td>
            <td colspan="2" width="50%">
                <img src=@Model.PicturePath width="600" height="600" asp-append-version="true" alt="线性回归图" />
            </td>
        </tr>
        <tr>
            <td colspan="4">
                <p>
                    评估总结(Evaluation Summary)：<br />
                    @if (Model.Status == "未通过")
                    {
                        <text>
                            本次实验中仪器比对结果不合格。
                        </text>
                    }
                    else
                    {
                        <text>
                            本次实验中仪器比对结果合格，结果表明
                            @(Html.DisplayFor(model => model.TargetInstrumentName))和@(Html.DisplayFor(model => model.MatchInstrumentName))
                            系统进行@(Html.DisplayFor(model => model.Item))检测没有显著性差异，
                            @(Html.DisplayFor(model => model.MatchInstrumentName))能有效地进行@(Html.DisplayFor(model => model.Item))项目的检测工作。
                        </text>
                    }
                </p>
            </td>
        </tr>
    </tbody>
</table>
